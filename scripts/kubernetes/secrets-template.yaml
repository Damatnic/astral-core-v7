# Kubernetes Secrets Template for Astral Core v7
# 
# WARNING: This is a template file. DO NOT commit actual secrets to version control.
# Use this template to create your actual secrets in the cluster.
#
# To create secrets from this template:
# 1. Copy this file to secrets.yaml
# 2. Replace all <VALUE> placeholders with actual base64-encoded values
# 3. Apply with: kubectl apply -f secrets.yaml
# 4. Delete the secrets.yaml file after applying
#
# To encode values: echo -n "your-secret-value" | base64

apiVersion: v1
kind: Secret
metadata:
  name: database-secret
  namespace: astral-core
  labels:
    app: astral-core-v7
type: Opaque
data:
  # Base64 encoded PostgreSQL connection URL
  # Example: postgresql://username:password@hostname:5432/database_name
  url: <BASE64_ENCODED_DATABASE_URL>

---
apiVersion: v1
kind: Secret
metadata:
  name: nextauth-secret
  namespace: astral-core
  labels:
    app: astral-core-v7
type: Opaque
data:
  # Base64 encoded NextAuth secret (should be a random string)
  # Generate with: openssl rand -base64 32
  secret: <BASE64_ENCODED_NEXTAUTH_SECRET>

---
apiVersion: v1
kind: Secret
metadata:
  name: stripe-secret
  namespace: astral-core
  labels:
    app: astral-core-v7
type: Opaque
data:
  # Base64 encoded Stripe secret key
  secret-key: <BASE64_ENCODED_STRIPE_SECRET_KEY>
  # Base64 encoded Stripe webhook secret
  webhook-secret: <BASE64_ENCODED_STRIPE_WEBHOOK_SECRET>
  # Base64 encoded Stripe publishable key (for reference)
  publishable-key: <BASE64_ENCODED_STRIPE_PUBLISHABLE_KEY>

---
apiVersion: v1
kind: Secret
metadata:
  name: encryption-secret
  namespace: astral-core
  labels:
    app: astral-core-v7
type: Opaque
data:
  # Base64 encoded encryption key for sensitive data
  # Generate with: openssl rand -base64 32
  key: <BASE64_ENCODED_ENCRYPTION_KEY>

---
apiVersion: v1
kind: Secret
metadata:
  name: jwt-secret
  namespace: astral-core
  labels:
    app: astral-core-v7
type: Opaque
data:
  # Base64 encoded JWT signing secret
  # Generate with: openssl rand -base64 64
  secret: <BASE64_ENCODED_JWT_SECRET>

---
apiVersion: v1
kind: Secret
metadata:
  name: ghcr-secret
  namespace: astral-core
  labels:
    app: astral-core-v7
type: kubernetes.io/dockerconfigjson
data:
  # Base64 encoded Docker config for GitHub Container Registry
  # Create with: kubectl create secret docker-registry ghcr-secret \
  #   --docker-server=ghcr.io \
  #   --docker-username=<GITHUB_USERNAME> \
  #   --docker-password=<GITHUB_TOKEN> \
  #   --dry-run=client -o yaml
  .dockerconfigjson: <BASE64_ENCODED_DOCKER_CONFIG>

---
apiVersion: v1
kind: Secret
metadata:
  name: ssl-certificates
  namespace: astral-core
  labels:
    app: astral-core-v7
type: kubernetes.io/tls
data:
  # Base64 encoded SSL certificate
  tls.crt: <BASE64_ENCODED_SSL_CERTIFICATE>
  # Base64 encoded SSL private key
  tls.key: <BASE64_ENCODED_SSL_PRIVATE_KEY>

---
# Optional: External service secrets
apiVersion: v1
kind: Secret
metadata:
  name: external-services-secret
  namespace: astral-core
  labels:
    app: astral-core-v7
type: Opaque
data:
  # Base64 encoded SendGrid API key (if using email service)
  sendgrid-api-key: <BASE64_ENCODED_SENDGRID_API_KEY>
  # Base64 encoded AWS access key (if using AWS services)
  aws-access-key-id: <BASE64_ENCODED_AWS_ACCESS_KEY_ID>
  # Base64 encoded AWS secret key
  aws-secret-access-key: <BASE64_ENCODED_AWS_SECRET_ACCESS_KEY>
  # Base64 encoded Redis URL (if using Redis)
  redis-url: <BASE64_ENCODED_REDIS_URL>

---
# Backup and monitoring secrets
apiVersion: v1
kind: Secret
metadata:
  name: monitoring-secret
  namespace: astral-core
  labels:
    app: astral-core-v7
type: Opaque
data:
  # Base64 encoded Slack webhook URL for alerts
  slack-webhook-url: <BASE64_ENCODED_SLACK_WEBHOOK_URL>
  # Base64 encoded Datadog API key (if using Datadog)
  datadog-api-key: <BASE64_ENCODED_DATADOG_API_KEY>
  # Base64 encoded New Relic license key (if using New Relic)
  newrelic-license-key: <BASE64_ENCODED_NEWRELIC_LICENSE_KEY>

---
# Instructions for creating secrets securely:
# 
# 1. Database URL:
#    echo -n "postgresql://user:pass@host:5432/dbname" | base64
#
# 2. NextAuth Secret:
#    echo -n "$(openssl rand -base64 32)" | base64
#
# 3. Encryption Key:
#    echo -n "$(openssl rand -base64 32)" | base64
#
# 4. JWT Secret:
#    echo -n "$(openssl rand -base64 64)" | base64
#
# 5. Docker registry secret:
#    kubectl create secret docker-registry ghcr-secret \
#      --docker-server=ghcr.io \
#      --docker-username=USERNAME \
#      --docker-password=TOKEN \
#      --namespace=astral-core \
#      --dry-run=client -o yaml | grep '.dockerconfigjson:' | awk '{print $2}'
#
# 6. TLS Certificate:
#    cat certificate.crt | base64 -w 0
#    cat private.key | base64 -w 0