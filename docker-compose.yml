version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: astral-core-dev
    restart: unless-stopped
    ports:
      - "3000:3000"
    env_file:
      - .env
    depends_on:
      - db
      - redis
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    networks:
      - astral-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    image: postgres:14-alpine
    container_name: astral-core-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DATABASE_NAME:-astralcore_v7}
      POSTGRES_USER: ${DATABASE_USER:-astral_user}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-dev_password}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    networks:
      - astral-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER:-astral_user} -d ${DATABASE_NAME:-astralcore_v7}"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: astral-core-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-dev_redis_password}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - astral-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Optional: Database admin interface
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: astral-core-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@astral-core.dev}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin123}
    ports:
      - "8080:80"
    depends_on:
      - db
    networks:
      - astral-network
    profiles:
      - dev-tools

  # Optional: Redis admin interface  
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: astral-core-redis-commander
    restart: unless-stopped
    environment:
      - REDIS_HOSTS=local:redis:6379:0:${REDIS_PASSWORD:-dev_redis_password}
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - astral-network
    profiles:
      - dev-tools

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  astral-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16